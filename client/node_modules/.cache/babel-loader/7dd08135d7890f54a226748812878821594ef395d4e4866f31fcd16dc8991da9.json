{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhatmirzo\\\\Desktop\\\\github\\\\pdp_chat\\\\client\\\\src\\\\components\\\\chat\\\\AudioRecorder\\\\AudioRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\nimport StopIcon from \"@mui/icons-material/Stop\";\nimport { toast } from \"react-toastify\";\nimport \"./style.css\";\nimport image from \"../../../assets/images\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AudioRecorder({\n  onTouched,\n  setOnTouched\n}) {\n  _s();\n  const audioRef = useRef();\n  const visualizer = useRef();\n\n  // Audio recording analyser\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  const recorder = () => {\n    if (audioRef !== null && audioRef !== void 0 && audioRef.current) {\n      audioRef === null || audioRef === void 0 ? void 0 : audioRef.current.play();\n    }\n    let ctx = new window.AudioContext();\n    let analyser = ctx.createAnalyser();\n    let source = ctx.createMediaElementSource(audioRef === null || audioRef === void 0 ? void 0 : audioRef.current);\n    source.connect(analyser);\n    source.connect(ctx.destination);\n    analyser.fftSize = 64;\n    let bufferLength = analyser.frequencyBinCount;\n    let dataArray = new Uint8Array(bufferLength);\n    let elements = [];\n    for (let i = 0; i < bufferLength; i++) {\n      let element = document.createElement(\"span\");\n      element.classList.add(\"element\");\n      elements.push(element);\n      visualizer === null || visualizer === void 0 ? void 0 : visualizer.current.appendChild(element);\n    }\n    let element = document.createElement(\"span\");\n    element.classList.add(\"element\");\n    visualizer === null || visualizer === void 0 ? void 0 : visualizer.current.appendChild(element);\n\n    // let clamp = (num, min, max) => {\n    //   if (num >= max) return max;\n    //   if (num <= min) return min;\n    //   return num;\n    // };\n\n    let update = () => {\n      requestAnimationFrame(update);\n      analyser.getByteFrequencyData(dataArray);\n      for (let i = 0; i < bufferLength; i++) {\n        let item = dataArray[i];\n\n        // elements[i].style.setProperty(\"--i\", `${clamp(item, 100, 150)+50}px`)\n        // console.log(elements[i].style.getPropertyValue(\"--i\"));\n        // elements[i].style.width = `${clamp(item, 100, 150)+50}px`;\n        // elements[i].style.height = `${clamp(item, 100, 150)+50}px`;\n        elements[i].style.setProperty(\"--i\", `${item}px`);\n      }\n    };\n    update();\n  };\n\n  // Audio recorder\n  let device = navigator.mediaDevices.getUserMedia({\n    audio: true\n  });\n  let items = [];\n  useEffect(() => {\n    if (onTouched) {\n      device.then(stream => {\n        let recorder = new MediaRecorder(stream);\n        recorder.ondataavailable = e => {\n          items.push(e.data);\n          let blob = new Blob(items, {\n            type: \"audio/webm\"\n          });\n          audioRef.current.src = window.URL.createObjectURL(blob);\n        };\n        if (onTouched) {\n          recorder.start();\n        }\n      });\n      recorder();\n    } else {\n      var _audioRef$current;\n      audioRef === null || audioRef === void 0 ? void 0 : (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.pause();\n    }\n  }, [onTouched]);\n  return onTouched ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      hidden: true,\n      controls: true,\n      ref: audioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualizer\",\n        ref: visualizer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-play\",\n        children: onTouched ? /*#__PURE__*/_jsxDEV(StopIcon, {\n          sx: {\n            width: \"100px\",\n            fontSize: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardVoiceIcon, {\n          sx: {\n            width: \"100px\",\n            fontSize: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this) : \"\";\n}\n_s(AudioRecorder, \"LMxenGFt8JWhIH1gBXai7Q1PUA0=\");\n_c = AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useEffect","useRef","useState","KeyboardVoiceIcon","StopIcon","toast","image","jsxDEV","_jsxDEV","AudioRecorder","onTouched","setOnTouched","_s","audioRef","visualizer","window","AudioContext","webkitAudioContext","recorder","current","play","ctx","analyser","createAnalyser","source","createMediaElementSource","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","elements","i","element","document","createElement","classList","add","push","appendChild","update","requestAnimationFrame","getByteFrequencyData","item","style","setProperty","device","navigator","mediaDevices","getUserMedia","audio","items","then","stream","MediaRecorder","ondataavailable","e","data","blob","Blob","type","src","URL","createObjectURL","start","_audioRef$current","pause","className","children","hidden","controls","ref","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Akhatmirzo/Desktop/github/pdp_chat/client/src/components/chat/AudioRecorder/AudioRecorder.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\r\nimport StopIcon from \"@mui/icons-material/Stop\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./style.css\";\r\nimport image from \"../../../assets/images\";\r\n\r\nexport default function AudioRecorder({ onTouched, setOnTouched }) {\r\n  const audioRef = useRef();\r\n  const visualizer = useRef();\r\n\r\n  // Audio recording analyser\r\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n  const recorder = () => {\r\n    if (audioRef?.current) {\r\n      audioRef?.current.play();\r\n    }\r\n    let ctx = new window.AudioContext();\r\n    let analyser = ctx.createAnalyser();\r\n    let source = ctx.createMediaElementSource(audioRef?.current);\r\n\r\n    source.connect(analyser);\r\n    source.connect(ctx.destination);\r\n    analyser.fftSize = 64;\r\n    let bufferLength = analyser.frequencyBinCount;\r\n    let dataArray = new Uint8Array(bufferLength);\r\n    let elements = [];\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      let element = document.createElement(\"span\");\r\n      element.classList.add(\"element\");\r\n      elements.push(element);\r\n      visualizer?.current.appendChild(element);\r\n    }\r\n\r\n    let element = document.createElement(\"span\");\r\n    element.classList.add(\"element\");\r\n    visualizer?.current.appendChild(element);\r\n\r\n    // let clamp = (num, min, max) => {\r\n    //   if (num >= max) return max;\r\n    //   if (num <= min) return min;\r\n    //   return num;\r\n    // };\r\n\r\n    let update = () => {\r\n      requestAnimationFrame(update);\r\n      analyser.getByteFrequencyData(dataArray);\r\n      for (let i = 0; i < bufferLength; i++) {\r\n        let item = dataArray[i];\r\n\r\n        // elements[i].style.setProperty(\"--i\", `${clamp(item, 100, 150)+50}px`)\r\n        // console.log(elements[i].style.getPropertyValue(\"--i\"));\r\n        // elements[i].style.width = `${clamp(item, 100, 150)+50}px`;\r\n        // elements[i].style.height = `${clamp(item, 100, 150)+50}px`;\r\n        elements[i].style.setProperty(\"--i\", `${item}px`);\r\n      }\r\n\r\n    };\r\n\r\n    update();\r\n  };\r\n\r\n  // Audio recorder\r\n  let device = navigator.mediaDevices.getUserMedia({audio: true});\r\n  let items = [];\r\n\r\n  useEffect(() => {\r\n    if (onTouched) {\r\n      device.then((stream) => {\r\n        let recorder = new MediaRecorder(stream);\r\n\r\n        recorder.ondataavailable = (e) => {\r\n          items.push(e.data);\r\n          let blob = new Blob(items, { type: \"audio/webm\" });\r\n          audioRef.current.src = window.URL.createObjectURL(blob);\r\n        };\r\n\r\n        if (onTouched) {\r\n          recorder.start();\r\n        }\r\n      });\r\n\r\n      recorder();\r\n    } else {\r\n      audioRef?.current?.pause();\r\n    }\r\n  }, [onTouched]);\r\n\r\n  return onTouched ? (\r\n    <div className=\" absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\">\r\n      <audio hidden controls ref={audioRef}></audio>\r\n      <div className=\"box\">\r\n        <div className=\"visualizer\" ref={visualizer}></div>\r\n      </div>\r\n      <div className=\"play\">\r\n        <div className=\"btn btn-play\">\r\n          {onTouched ? (\r\n            <StopIcon sx={{ width: \"100px\", fontSize: 150 }} />\r\n          ) : (\r\n            <KeyboardVoiceIcon sx={{ width: \"100px\", fontSize: 150 }} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,aAAaA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,CAAC;EACzB,MAAMa,UAAU,GAAGb,MAAM,CAAC,CAAC;;EAE3B;EACAc,MAAM,CAACC,YAAY,GAAGD,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB;EAEtE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIL,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEM,OAAO,EAAE;MACrBN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,OAAO,CAACC,IAAI,CAAC,CAAC;IAC1B;IACA,IAAIC,GAAG,GAAG,IAAIN,MAAM,CAACC,YAAY,CAAC,CAAC;IACnC,IAAIM,QAAQ,GAAGD,GAAG,CAACE,cAAc,CAAC,CAAC;IACnC,IAAIC,MAAM,GAAGH,GAAG,CAACI,wBAAwB,CAACZ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,OAAO,CAAC;IAE5DK,MAAM,CAACE,OAAO,CAACJ,QAAQ,CAAC;IACxBE,MAAM,CAACE,OAAO,CAACL,GAAG,CAACM,WAAW,CAAC;IAC/BL,QAAQ,CAACM,OAAO,GAAG,EAAE;IACrB,IAAIC,YAAY,GAAGP,QAAQ,CAACQ,iBAAiB;IAC7C,IAAIC,SAAS,GAAG,IAAIC,UAAU,CAACH,YAAY,CAAC;IAC5C,IAAII,QAAQ,GAAG,EAAE;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,EAAEK,CAAC,EAAE,EAAE;MACrC,IAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC5CF,OAAO,CAACG,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MAChCN,QAAQ,CAACO,IAAI,CAACL,OAAO,CAAC;MACtBrB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,OAAO,CAACsB,WAAW,CAACN,OAAO,CAAC;IAC1C;IAEA,IAAIA,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC5CF,OAAO,CAACG,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IAChCzB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,OAAO,CAACsB,WAAW,CAACN,OAAO,CAAC;;IAExC;IACA;IACA;IACA;IACA;;IAEA,IAAIO,MAAM,GAAGA,CAAA,KAAM;MACjBC,qBAAqB,CAACD,MAAM,CAAC;MAC7BpB,QAAQ,CAACsB,oBAAoB,CAACb,SAAS,CAAC;MACxC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,EAAEK,CAAC,EAAE,EAAE;QACrC,IAAIW,IAAI,GAAGd,SAAS,CAACG,CAAC,CAAC;;QAEvB;QACA;QACA;QACA;QACAD,QAAQ,CAACC,CAAC,CAAC,CAACY,KAAK,CAACC,WAAW,CAAC,KAAK,EAAG,GAAEF,IAAK,IAAG,CAAC;MACnD;IAEF,CAAC;IAEDH,MAAM,CAAC,CAAC;EACV,CAAC;;EAED;EACA,IAAIM,MAAM,GAAGC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;IAACC,KAAK,EAAE;EAAI,CAAC,CAAC;EAC/D,IAAIC,KAAK,GAAG,EAAE;EAEdrD,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,EAAE;MACbsC,MAAM,CAACM,IAAI,CAAEC,MAAM,IAAK;QACtB,IAAIrC,QAAQ,GAAG,IAAIsC,aAAa,CAACD,MAAM,CAAC;QAExCrC,QAAQ,CAACuC,eAAe,GAAIC,CAAC,IAAK;UAChCL,KAAK,CAACb,IAAI,CAACkB,CAAC,CAACC,IAAI,CAAC;UAClB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACR,KAAK,EAAE;YAAES,IAAI,EAAE;UAAa,CAAC,CAAC;UAClDjD,QAAQ,CAACM,OAAO,CAAC4C,GAAG,GAAGhD,MAAM,CAACiD,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QACzD,CAAC;QAED,IAAIlD,SAAS,EAAE;UACbQ,QAAQ,CAACgD,KAAK,CAAC,CAAC;QAClB;MACF,CAAC,CAAC;MAEFhD,QAAQ,CAAC,CAAC;IACZ,CAAC,MAAM;MAAA,IAAAiD,iBAAA;MACLtD,QAAQ,aAARA,QAAQ,wBAAAsD,iBAAA,GAARtD,QAAQ,CAAEM,OAAO,cAAAgD,iBAAA,uBAAjBA,iBAAA,CAAmBC,KAAK,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAAC1D,SAAS,CAAC,CAAC;EAEf,OAAOA,SAAS,gBACdF,OAAA;IAAK6D,SAAS,EAAC,8DAA8D;IAAAC,QAAA,gBAC3E9D,OAAA;MAAO+D,MAAM;MAACC,QAAQ;MAACC,GAAG,EAAE5D;IAAS;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CrE,OAAA;MAAK6D,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClB9D,OAAA;QAAK6D,SAAS,EAAC,YAAY;QAACI,GAAG,EAAE3D;MAAW;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNrE,OAAA;MAAK6D,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnB9D,OAAA;QAAK6D,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1B5D,SAAS,gBACRF,OAAA,CAACJ,QAAQ;UAAC0E,EAAE,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEC,QAAQ,EAAE;UAAI;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEnDrE,OAAA,CAACL,iBAAiB;UAAC2E,EAAE,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEC,QAAQ,EAAE;UAAI;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC5D;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,GAEN,EACD;AACH;AAACjE,EAAA,CAtGuBH,aAAa;AAAAwE,EAAA,GAAbxE,aAAa;AAAA,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
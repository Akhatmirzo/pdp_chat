{"ast":null,"code":"const API_URL = \"http://localhost:8000/api/user/\";\nasync function UserRegister(data) {\n  try {\n    const response = await fetch(API_URL, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        ...data\n      }\n    });\n    if (response.status !== 201) {\n      throw new Error(\"User registration failed\");\n    }\n    const res = await response.json();\n    return res;\n  } catch (error) {\n    return {\n      error\n    };\n  }\n}\n_c = UserRegister;\nexport { UserRegister };\nvar _c;\n$RefreshReg$(_c, \"UserRegister\");","map":{"version":3,"names":["API_URL","UserRegister","data","response","fetch","headers","body","status","Error","res","json","error","_c","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/utils/UserApi.js"],"sourcesContent":["const API_URL = \"http://localhost:8000/api/user/\";\r\n\r\nasync function UserRegister(data) {\r\n  try {\r\n    const response = await fetch(API_URL, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: {\r\n        ...data,\r\n      },\r\n    });\r\n\r\n    if (response.status !== 201) {\r\n      throw new Error(\"User registration failed\");\r\n    }\r\n\r\n    const res = await response.json();\r\n\r\n    return res;\r\n  } catch (error) {\r\n    return {\r\n      error,\r\n    };\r\n  }\r\n}\r\n\r\nexport {UserRegister}\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,eAAeC,YAAYA,CAACC,IAAI,EAAE;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,EAAE;MACpCK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,IAAI,EAAE;QACJ,GAAGJ;MACL;IACF,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEA,MAAMC,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAEjC,OAAOD,GAAG;EACZ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAO;MACLA;IACF,CAAC;EACH;AACF;AAACC,EAAA,GAxBcX,YAAY;AA0B3B,SAAQA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\black\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pdp_chat\\\\client\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ChatNavbar from \"../components/chat/ChatNavbar\";\nimport ChatMessageInputs from \"../components/chat/ChatMessageInputs\";\nimport Message from \"../components/chat/Message\";\nimport { themeContext } from \"../context/ThemeContext\";\nimport { useParams } from \"react-router-dom\";\nimport Nomessages from \"../components/etc/Nomessages\";\nimport { getChatRoom } from \"../utils/ChatRoomApi\";\nimport { socketContext } from \"../context/SocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const {\n    mode\n  } = useContext(themeContext);\n  const [load, setLoad] = useState(false);\n  const {\n    socket\n  } = useContext(socketContext);\n  const [chatRoom, setChatRoom] = useState();\n  const receiver = useParams();\n  const lastMessageRef = useRef();\n  const ChatRoom = async () => {\n    const chatData = await getChatRoom(receiver.id);\n    // console.log(chatData);\n    setChatRoom(chatData);\n  };\n  console.log(lastMessageRef);\n  useEffect(() => {\n    ChatRoom();\n  }, [receiver]);\n  useEffect(() => {\n    log;\n    setTimeout(() => {\n      if (lastMessageRef.current) {\n        var _lastMessageRef$curre;\n        (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    }, 100);\n  }, [chatRoom, lastMessageRef]);\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"newMessage\", msg => {\n        const newMessage = msg;\n        setChatRoom(prevState => {\n          return {\n            ...prevState,\n            messages: [...prevState.messages, newMessage]\n          };\n        });\n      });\n      return () => socket === null || socket === void 0 ? void 0 : socket.off(\"newMessage\");\n    } else setLoad(!load);\n  }, [load]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ChatNavbar, {\n      receiverData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id === receiver.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: \"100vh\",\n        overflowX: \"hidden\",\n        overflowY: \"auto\",\n        \"&::-webkit-scrollbar\": {\n          height: 2,\n          width: 2,\n          WebkitAppearance: \"none\"\n        },\n        \"&::-webkit-scrollbar-thumb\": {\n          borderRadius: 0,\n          border: \"2px solid\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          height: \"auto\",\n          minHeight: \"100%\",\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end\",\n          backgroundColor: mode ? \"\" : \"rgba(24, 24, 24, 1)\"\n        },\n        children: (chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.messages.length) === 0 ? /*#__PURE__*/_jsxDEV(Nomessages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.messages.map((msg, idx) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            ref: lastMessageRef,\n            messages: msg,\n            receiver: receiver.id,\n            receiverData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id === receiver.id),\n            senderData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id !== receiver.id)\n          }, msg._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatMessageInputs, {\n      path: receiver.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"7xDVMNeh97TWKRRvZXFf2UtHR5M=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["Box","React","useContext","useEffect","useRef","useState","ChatNavbar","ChatMessageInputs","Message","themeContext","useParams","Nomessages","getChatRoom","socketContext","jsxDEV","_jsxDEV","Chat","_s","mode","load","setLoad","socket","chatRoom","setChatRoom","receiver","lastMessageRef","ChatRoom","chatData","id","console","log","setTimeout","current","_lastMessageRef$curre","scrollIntoView","behavior","on","msg","newMessage","prevState","messages","off","sx","width","display","flexDirection","justifyContent","children","receiverData","members","find","member","_id","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowX","overflowY","WebkitAppearance","borderRadius","border","minHeight","flex","backgroundColor","length","map","idx","ref","senderData","path","_c","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/pages/Chat.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport ChatNavbar from \"../components/chat/ChatNavbar\";\r\nimport ChatMessageInputs from \"../components/chat/ChatMessageInputs\";\r\nimport Message from \"../components/chat/Message\";\r\nimport { themeContext } from \"../context/ThemeContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Nomessages from \"../components/etc/Nomessages\";\r\nimport { getChatRoom } from \"../utils/ChatRoomApi\";\r\nimport { socketContext } from \"../context/SocketContext\";\r\n\r\nexport default function Chat() {\r\n  const { mode } = useContext(themeContext);\r\n  const [load, setLoad] = useState(false);\r\n  const { socket } = useContext(socketContext);\r\n  const [chatRoom, setChatRoom] = useState();\r\n  const receiver = useParams();\r\n  const lastMessageRef = useRef();\r\n\r\n  const ChatRoom = async () => {\r\n    const chatData = await getChatRoom(receiver.id);\r\n    // console.log(chatData);\r\n    setChatRoom(chatData);\r\n  };\r\n\r\n  console.log(lastMessageRef);\r\n\r\n  useEffect(() => {\r\n    ChatRoom();\r\n  }, [receiver]);\r\n\r\n  useEffect(() => {\r\n    log\r\n\t\tsetTimeout(() => {\r\n      if (lastMessageRef.current) {\r\n        lastMessageRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n\t\t}, 100);\r\n\t}, [chatRoom, lastMessageRef]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"newMessage\", (msg) => {\r\n        const newMessage = msg;\r\n        setChatRoom((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            messages: [...prevState.messages, newMessage],\r\n          };\r\n        });\r\n      });\r\n      return () => socket?.off(\"newMessage\");\r\n    } else setLoad(!load);\r\n  }, [load]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <ChatNavbar\r\n        receiverData={chatRoom?.members.find(\r\n          (member) => member._id === receiver.id\r\n        )}\r\n      />\r\n\r\n      <Box\r\n        sx={{\r\n          height: \"100vh\",\r\n          overflowX: \"hidden\",\r\n          overflowY: \"auto\",\r\n          \"&::-webkit-scrollbar\": {\r\n            height: 2,\r\n            width: 2,\r\n            WebkitAppearance: \"none\",\r\n          },\r\n          \"&::-webkit-scrollbar-thumb\": {\r\n            borderRadius: 0,\r\n            border: \"2px solid\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            minHeight: \"100%\",\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-end\",\r\n            backgroundColor: mode ? \"\" : \"rgba(24, 24, 24, 1)\",\r\n          }}\r\n        >\r\n          {chatRoom?.messages.length === 0 ? (\r\n            <Nomessages />\r\n          ) : (\r\n            chatRoom?.messages.map((msg, idx) => {\r\n              return (\r\n                <Message\r\n                  ref={lastMessageRef}\r\n                  key={msg._id}\r\n                  messages={msg}\r\n                  receiver={receiver.id}\r\n                  receiverData={chatRoom?.members.find(\r\n                    (member) => member._id === receiver.id\r\n                  )}\r\n                  senderData={chatRoom?.members.find(\r\n                    (member) => member._id !== receiver.id\r\n                  )}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <ChatMessageInputs path={receiver.id} />\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\black\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pdp_chat\\\\client\\\\src\\\\context\\\\ChatRoomContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from \"react\";\nimport { getChatRooms } from \"../utils/ChatRoomApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatRoomContext = /*#__PURE__*/createContext();\nexport default function ChatRoomContext({\n  children\n}) {\n  _s();\n  const [ChatRoom, ChatRoomDispatch] = useReducer(async (state, action) => {\n    switch (action.type) {\n      case \"getChatRooms\":\n        try {\n          const data = await getChatRooms();\n          console.log(data);\n          return data.data;\n        } catch (error) {\n          console.log(error);\n          return state;\n        }\n      default:\n        return [...state];\n    }\n  }, []);\n  use;\n  return /*#__PURE__*/_jsxDEV(chatRoomContext.Provider, {\n    value: {\n      ChatRoom,\n      ChatRoomDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoomContext, \"MukIH42wytvhHf/jSX/FV4H1ut8=\");\n_c = ChatRoomContext;\nexport { chatRoomContext };\nvar _c;\n$RefreshReg$(_c, \"ChatRoomContext\");","map":{"version":3,"names":["React","createContext","useReducer","getChatRooms","jsxDEV","_jsxDEV","chatRoomContext","ChatRoomContext","children","_s","ChatRoom","ChatRoomDispatch","state","action","type","data","console","log","error","use","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/context/ChatRoomContext.jsx"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport { getChatRooms } from \"../utils/ChatRoomApi\";\r\n\r\nconst chatRoomContext = createContext();\r\n\r\nexport default function ChatRoomContext({ children }) {\r\n  const [ChatRoom, ChatRoomDispatch] = useReducer(async (state, action) => {\r\n    switch (action.type) {\r\n      case \"getChatRooms\":\r\n        try {\r\n          const data = await getChatRooms();\r\n          console.log(data);\r\n          return data.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n          return state;\r\n        }\r\n      default:\r\n        return [...state];\r\n    }\r\n  }, []);\r\n\r\n  use\r\n\r\n  return (\r\n    <chatRoomContext.Provider value={{ ChatRoom, ChatRoomDispatch }}>\r\n      {children}\r\n    </chatRoomContext.Provider>\r\n  );\r\n}\r\n\r\nexport { chatRoomContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,eAAe,SAASM,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,QAAQ,EAAEC,gBAAgB,CAAC,GAAGT,UAAU,CAAC,OAAOU,KAAK,EAAEC,MAAM,KAAK;IACvE,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,cAAc;QACjB,IAAI;UACF,MAAMC,IAAI,GAAG,MAAMZ,YAAY,CAAC,CAAC;UACjCa,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;UACjB,OAAOA,IAAI,CAACA,IAAI;QAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;UAClB,OAAON,KAAK;QACd;MACF;QACE,OAAO,CAAC,GAAGA,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAENO,GAAG;EAEH,oBACEd,OAAA,CAACC,eAAe,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ;MAAEC;IAAiB,CAAE;IAAAH,QAAA,EAC7DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAAChB,EAAA,CAxBuBF,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AA0BvC,SAASD,eAAe;AAAG,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
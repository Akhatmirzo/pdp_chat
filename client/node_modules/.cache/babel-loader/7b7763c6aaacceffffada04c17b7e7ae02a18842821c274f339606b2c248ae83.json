{"ast":null,"code":"const API_URL = \"http://localhost:8000/api/room/\";\nasync function SendMessage(data, id) {\n  try {\n    const response = await fetch(`${API_URL}send/${id}`);\n    if (response.status !== 200) {\n      console.log(response);\n      throw new Error(\"Message not sent\");\n    }\n    const res = await response.json();\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n_c = SendMessage;\nasync function GetChatRooms() {\n  try {\n    const response = await fetch(`${API_URL}chatrooms`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    if (response.status !== 200) {\n      console.log(response);\n      throw new Error(\"Chat not found\");\n    }\n    const res = await response.json();\n    return res;\n  } catch (error) {\n    console.log(error);\n    return {\n      ...error\n    };\n  }\n}\n_c2 = GetChatRooms;\nexport { GetChatRooms, SendMessage };\nvar _c, _c2;\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"GetChatRooms\");","map":{"version":3,"names":["API_URL","SendMessage","data","id","response","fetch","status","console","log","Error","res","json","error","_c","GetChatRooms","method","headers","Authorization","localStorage","getItem","_c2","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/utils/ChatApi.js"],"sourcesContent":["const API_URL = \"http://localhost:8000/api/room/\";\r\n\r\nasync function SendMessage(data, id) {\r\n  try {\r\n    const response = await fetch(`${API_URL}send/${id}`);\r\n\r\n    if (response.status !== 200) {\r\n      console.log(response);\r\n      throw new Error(\"Message not sent\");\r\n    }\r\n\r\n    const res = await response.json();\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nasync function GetChatRooms() {\r\n  try {\r\n    const response = await fetch(`${API_URL}chatrooms`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.log(response);\r\n      throw new Error(\"Chat not found\");\r\n    }\r\n\r\n    const res = await response.json();\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n}\r\n\r\nexport { GetChatRooms, SendMessage };\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,eAAeC,WAAWA,CAACC,IAAI,EAAEC,EAAE,EAAE;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,QAAOG,EAAG,EAAC,CAAC;IAEpD,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,MAAM,IAAIK,KAAK,CAAC,kBAAkB,CAAC;IACrC;IAEA,MAAMC,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAEjC,OAAOD,GAAG;EACZ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF;AAACC,EAAA,GAfcZ,WAAW;AAiB1B,eAAea,YAAYA,CAAA,EAAG;EAC5B,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,WAAU,EAAE;MAClDe,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC7C;IACF,CAAC,CAAC;IAEF,IAAIf,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,MAAM,IAAIK,KAAK,CAAC,gBAAgB,CAAC;IACnC;IAEA,MAAMC,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAEjC,OAAOD,GAAG;EACZ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IAClB,OAAO;MACL,GAAGA;IACL,CAAC;EACH;AACF;AAACQ,GAAA,GAxBcN,YAAY;AA0B3B,SAASA,YAAY,EAAEb,WAAW;AAAG,IAAAY,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
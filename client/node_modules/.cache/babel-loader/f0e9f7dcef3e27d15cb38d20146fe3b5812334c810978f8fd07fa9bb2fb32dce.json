{"ast":null,"code":"const API_URL = \"http://localhost:8000/api/user/\";\nasync function UserRegister(data) {\n  try {\n    const response = await fetch(API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...data\n      })\n    });\n    if (response.status !== 201) {\n      throw new Error(\"User registration failed\");\n    }\n    const res = await response.json();\n    return res;\n  } catch (error) {\n    console.log(error);\n    return {\n      ...error\n    };\n  }\n}\n_c = UserRegister;\nasync function UserLogin(data) {\n  try {\n    const response = await fetch(`${API_URL}login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...data\n      })\n    });\n    if (response.status !== 200) {\n      throw new Error(\"User registration failed\");\n    }\n    const res = await response.json();\n    return res;\n  } catch (error) {\n    console.log(error);\n    return {\n      ...error\n    };\n  }\n}\n_c2 = UserLogin;\nasync function GetUsers() {\n  try {\n    const response = await fetch(`${API_URL}sidebar`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    if (response.status !== 200) {\n      console.log(response);\n      throw new Error(\"User not found\");\n    }\n    const res = await response.json();\n    return res;\n  } catch (error) {\n    console.log(error);\n    return {\n      ...error\n    };\n  }\n}\n_c3 = GetUsers;\nasync function Serach() {\n  try {\n    const response = await fetch(`${API_URL}sidebar`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    if (response.status !== 200) {\n      console.log(response);\n      throw new Error(\"User not found\");\n    }\n    const res = await response.json();\n    return res;\n  } catch (error) {\n    console.log(error);\n    return {\n      ...error\n    };\n  }\n}\n_c4 = Serach;\nexport { UserRegister, UserLogin, GetUsers };\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UserRegister\");\n$RefreshReg$(_c2, \"UserLogin\");\n$RefreshReg$(_c3, \"GetUsers\");\n$RefreshReg$(_c4, \"Serach\");","map":{"version":3,"names":["API_URL","UserRegister","data","response","fetch","method","headers","body","JSON","stringify","status","Error","res","json","error","console","log","_c","UserLogin","_c2","GetUsers","Authorization","localStorage","getItem","_c3","Serach","_c4","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/utils/UserApi.js"],"sourcesContent":["const API_URL = \"http://localhost:8000/api/user/\";\r\n\r\nasync function UserRegister(data) {\r\n  try {\r\n    const response = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        ...data,\r\n      }),\r\n    });\r\n\r\n    if (response.status !== 201) {\r\n      throw new Error(\"User registration failed\");\r\n    }\r\n\r\n    const res = await response.json();\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n}\r\n\r\nasync function UserLogin(data) {\r\n  try {\r\n    const response = await fetch(`${API_URL}login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        ...data,\r\n      }),\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      throw new Error(\"User registration failed\");\r\n    }\r\n\r\n    const res = await response.json();\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n}\r\n\r\nasync function GetUsers() {\r\n  try {\r\n    const response = await fetch(`${API_URL}sidebar`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.log(response);\r\n      throw new Error(\"User not found\");\r\n    }\r\n\r\n    const res = await response.json();\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n}\r\nasync function Serach() {\r\n  try {\r\n    const response = await fetch(`${API_URL}sidebar`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.log(response);\r\n      throw new Error(\"User not found\");\r\n    }\r\n\r\n    const res = await response.json();\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      ...error,\r\n    };\r\n  }\r\n}\r\n\r\nexport { UserRegister, UserLogin, GetUsers };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
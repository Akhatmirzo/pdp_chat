{"ast":null,"code":"const token = localStorage.getItem(\"token\");\nasync function getChatRooms() {\n  try {\n    const response = await fetch(\"http://localhost:8000/api/room/chatrooms\", {\n      method: \"GET\",\n      headers: {\n        authorization: token\n      }\n    });\n    if (response.status !== 200) {\n      alert(\"Error: ChatRoom not found\");\n      throw new Error(\"ChatRoom not found\");\n    }\n    const res = await response.json();\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nasync function getChatRoom(id) {\n  try {\n    const response = await fetch(`http://localhost:8000/api/room/chatroom/${id}`, {\n      method: \"GET\",\n      headers: {\n        authorization: token\n      }\n    });\n    if (response.status !== 200) {\n      console.log(response);\n      throw new Error(\"ChatRoom not found\");\n    }\n    const res = await response.json();\n    return res === null || res === void 0 ? void 0 : res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport { getChatRooms, getChatRoom };","map":{"version":3,"names":["token","localStorage","getItem","getChatRooms","response","fetch","method","headers","authorization","status","alert","Error","res","json","data","error","console","log","getChatRoom","id"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/utils/ChatRoomApi.js"],"sourcesContent":["const token = localStorage.getItem(\"token\");\r\n\r\nasync function getChatRooms() {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8000/api/room/chatrooms\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      alert(\"Error: ChatRoom not found\")\r\n      throw new Error(\"ChatRoom not found\");\r\n    }\r\n\r\n    const res = await response.json();\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nasync function getChatRoom(id) {\r\n  try {\r\n    const response = await fetch(`http://localhost:8000/api/room/chatroom/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    });\r\n\r\n    if (response.status !== 200) {\r\n      console.log(response)\r\n      throw new Error(\"ChatRoom not found\");\r\n    }\r\n\r\n    const res = await response.json();\r\n    return res?.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport { getChatRooms, getChatRoom };\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,eAAeC,YAAYA,CAAA,EAAG;EAC5B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;MACvEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAER;MACjB;IACF,CAAC,CAAC;IAEF,IAAII,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3BC,KAAK,CAAC,2BAA2B,CAAC;MAClC,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMC,GAAG,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACjC,OAAOD,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AACA,eAAeG,WAAWA,CAACC,EAAE,EAAE;EAC7B,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0Cc,EAAG,EAAC,EAAE;MAC5Eb,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAER;MACjB;IACF,CAAC,CAAC;IAEF,IAAII,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3BO,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;MACrB,MAAM,IAAIO,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMC,GAAG,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACjC,OAAOD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,IAAI;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AAEA,SAASZ,YAAY,EAAEe,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
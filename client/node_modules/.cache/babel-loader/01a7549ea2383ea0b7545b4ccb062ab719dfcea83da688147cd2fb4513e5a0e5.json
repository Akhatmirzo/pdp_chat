{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\black\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pdp_chat\\\\client\\\\src\\\\pages\\\\NewChat.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ChatMessageInputs from \"../components/chat/ChatMessageInputs\";\nimport ChatNavbar from \"../components/chat/ChatNavbar\";\nimport { themeContext } from \"../context/ThemeContext\";\nimport { socketContext } from \"../context/SocketContext\";\nimport { useParams } from \"react-router-dom\";\nimport { getChatRoom } from \"../utils/ChatRoomApi\";\nimport Nomessages from \"../components/etc/Nomessages\";\nimport Message from \"../components/chat/Message\";\nimport { GetUserAll } from \"../utils/UserApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewChat({\n  onlineUsers,\n  checkOnline\n}) {\n  _s();\n  const {\n    mode\n  } = useContext(themeContext);\n  const [load, setLoad] = useState(false);\n  const [isChatData, setIsChatData] = useState(false);\n  const {\n    socket\n  } = useContext(socketContext);\n  const [chatRoom, setChatRoom] = useState();\n  const receiver = useParams();\n  const lastMessageRef = useRef(null);\n  const ChatRoom = async () => {\n    const chatData = await getChatRoom(receiver.id);\n    console.log(chatData);\n    setChatRoom(chatData);\n    if (!chatData) {\n      setIsChatData(true);\n      const getMember = await GetUserAll();\n      const obj = {\n        members: getMember.data,\n        messages: []\n      };\n      console.log(getMember);\n      setChatRoom(obj);\n    }\n  };\n  const updateChatRoom = async msg => {\n    setChatRoom(prevState => {\n      return {\n        ...prevState,\n        messages: [...prevState.messages, msg]\n      };\n    });\n  };\n  useEffect(() => {\n    ChatRoom();\n  }, [receiver]);\n  useEffect(() => {\n    setTimeout(() => {\n      if (lastMessageRef.current) {\n        var _lastMessageRef$curre;\n        (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    }, 100);\n  }, [chatRoom]);\n  useEffect(() => {\n    if (socket && chatRoom) {\n      socket.on(\"newMessage\", msg => {\n        const {\n          message,\n          chatId\n        } = msg;\n        const id = chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom._id;\n        console.log(chatId, id);\n        console.log(chatRoom);\n        if (chatId == id) {\n          setChatRoom(prevState => {\n            return {\n              ...prevState,\n              messages: [...prevState.messages, message]\n            };\n          });\n        }\n      });\n      return () => socket === null || socket === void 0 ? void 0 : socket.off(\"newMessage\");\n    } else setLoad(!load);\n  }, [load, chatRoom]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChatNavbar, {\n        receiverData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id === receiver.id),\n        onlineUsers: onlineUsers,\n        checkOnline: checkOnline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: \"100vh\",\n          overflowX: \"hidden\",\n          overflowY: \"auto\",\n          \"&::-webkit-scrollbar\": {\n            height: 2,\n            width: 2,\n            WebkitAppearance: \"none\"\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            borderRadius: 0,\n            border: \"2px solid\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            minHeight: \"100%\",\n            flex: 1,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"flex-end\",\n            backgroundColor: mode ? \"\" : \"rgba(24, 24, 24, 1)\"\n          },\n          children: (chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.messages.length) === 0 ? /*#__PURE__*/_jsxDEV(Nomessages, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this) : chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.messages.map((msg, idx) => {\n            return /*#__PURE__*/_jsxDEV(Message, {\n              ref: lastMessageRef,\n              messages: msg,\n              receiver: receiver.id,\n              receiverData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id === receiver.id),\n              senderData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id !== receiver.id)\n            }, msg._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessageInputs, {\n        path: receiver.id,\n        setChatRoom: updateChatRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(NewChat, \"JVvAs3/YzLuvLLCUKuzvZNYFv0g=\", false, function () {\n  return [useParams];\n});\n_c = NewChat;\nvar _c;\n$RefreshReg$(_c, \"NewChat\");","map":{"version":3,"names":["Box","React","useContext","useEffect","useRef","useState","ChatMessageInputs","ChatNavbar","themeContext","socketContext","useParams","getChatRoom","Nomessages","Message","GetUserAll","jsxDEV","_jsxDEV","Fragment","_Fragment","NewChat","onlineUsers","checkOnline","_s","mode","load","setLoad","isChatData","setIsChatData","socket","chatRoom","setChatRoom","receiver","lastMessageRef","ChatRoom","chatData","id","console","log","getMember","obj","members","data","messages","updateChatRoom","msg","prevState","setTimeout","current","_lastMessageRef$curre","scrollIntoView","behavior","on","message","chatId","_id","off","children","sx","width","display","flexDirection","justifyContent","receiverData","find","member","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowX","overflowY","WebkitAppearance","borderRadius","border","position","minHeight","flex","backgroundColor","length","map","idx","ref","senderData","path","_c","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/pages/NewChat.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport ChatMessageInputs from \"../components/chat/ChatMessageInputs\";\r\nimport ChatNavbar from \"../components/chat/ChatNavbar\";\r\nimport { themeContext } from \"../context/ThemeContext\";\r\nimport { socketContext } from \"../context/SocketContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getChatRoom } from \"../utils/ChatRoomApi\";\r\nimport Nomessages from \"../components/etc/Nomessages\";\r\nimport Message from \"../components/chat/Message\";\r\nimport { GetUserAll } from \"../utils/UserApi\";\r\n\r\nexport default function NewChat({ onlineUsers, checkOnline }) {\r\n  const { mode } = useContext(themeContext);\r\n  const [load, setLoad] = useState(false);\r\n  const [isChatData, setIsChatData] = useState(false)\r\n  const { socket } = useContext(socketContext);\r\n  const [chatRoom, setChatRoom] = useState();\r\n  const receiver = useParams();\r\n  const lastMessageRef = useRef(null);\r\n\r\n  const ChatRoom = async () => {\r\n    const chatData = await getChatRoom(receiver.id);\r\n    console.log(chatData);\r\n    setChatRoom(chatData);\r\n\r\n    if (!chatData) {\r\n      setIsChatData(true)\r\n      const getMember = await GetUserAll();\r\n      const obj = {\r\n        members: getMember.data,\r\n        messages: [],\r\n      };\r\n\r\n      console.log(getMember);\r\n\r\n      setChatRoom(obj);\r\n    }\r\n  };\r\n\r\n  const updateChatRoom = async (msg) => {\r\n    setChatRoom((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        messages: [...prevState.messages, msg],\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    ChatRoom();\r\n  }, [receiver]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (lastMessageRef.current) {\r\n        lastMessageRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    }, 100);\r\n  }, [chatRoom]);\r\n\r\n  useEffect(() => {\r\n    if (socket && chatRoom) {\r\n      socket.on(\"newMessage\", (msg) => {\r\n        const { message, chatId } = msg;\r\n        const id = chatRoom?._id;\r\n        console.log(chatId, id);\r\n        console.log(chatRoom);\r\n        if (chatId == id) {\r\n          setChatRoom((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              messages: [...prevState.messages, message],\r\n            };\r\n          });\r\n        }\r\n      });\r\n      return () => socket?.off(\"newMessage\");\r\n    } else setLoad(!load);\r\n  }, [load, chatRoom]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <ChatNavbar\r\n          receiverData={chatRoom?.members.find(\r\n            (member) => member._id === receiver.id\r\n          )}\r\n          onlineUsers={onlineUsers}\r\n          checkOnline={checkOnline}\r\n        />\r\n\r\n        <Box\r\n          sx={{\r\n            height: \"100vh\",\r\n            overflowX: \"hidden\",\r\n            overflowY: \"auto\",\r\n            \"&::-webkit-scrollbar\": {\r\n              height: 2,\r\n              width: 2,\r\n              WebkitAppearance: \"none\",\r\n            },\r\n            \"&::-webkit-scrollbar-thumb\": {\r\n              borderRadius: 0,\r\n              border: \"2px solid\",\r\n            },\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"auto\",\r\n              minHeight: \"100%\",\r\n              flex: 1,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"flex-end\",\r\n              backgroundColor: mode ? \"\" : \"rgba(24, 24, 24, 1)\",\r\n            }}\r\n          >\r\n            {chatRoom?.messages.length === 0 ? (\r\n              <Nomessages />\r\n            ) : (\r\n              chatRoom?.messages.map((msg, idx) => {\r\n                return (\r\n                  <Message\r\n                    ref={lastMessageRef}\r\n                    key={msg._id}\r\n                    messages={msg}\r\n                    receiver={receiver.id}\r\n                    receiverData={chatRoom?.members.find(\r\n                      (member) => member._id === receiver.id\r\n                    )}\r\n                    senderData={chatRoom?.members.find(\r\n                      (member) => member._id !== receiver.id\r\n                    )}\r\n                  />\r\n                );\r\n              })\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <ChatMessageInputs path={receiver.id} setChatRoom={updateChatRoom} />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
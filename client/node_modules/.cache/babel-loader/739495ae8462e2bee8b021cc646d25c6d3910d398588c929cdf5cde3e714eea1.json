{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\black\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pdp_chat\\\\client\\\\src\\\\context\\\\SocketContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { tokenContext } from \"../context/TokenContext\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socketContext = /*#__PURE__*/createContext();\nexport default function SocketContext({\n  children\n}) {\n  _s();\n  const [socket, setSocket] = useState();\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const {\n    token\n  } = useContext(tokenContext);\n  useEffect(() => {\n    if (token) {\n      const ConnectSocket = io(\"http://localhost:8000/\", {\n        query: {\n          authorization: token\n        }\n      });\n      console.log(ConnectSocket);\n      setSocket(ConnectSocket);\n      // socket.on() is used to listen to the events. can be used both on client and server side\n      ConnectSocket.on(\"getOnlineUsers\", users => {\n        setOnlineUsers(users);\n      });\n      return () => ConnectSocket.close();\n    } else {\n      if (socket) {\n        socket === null || socket === void 0 ? void 0 : socket.close();\n        setSocket(\"\");\n      }\n    }\n    socket.on(\"message\", message => {});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(socketContext.Provider, {\n    value: {\n      socket,\n      onlineUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(SocketContext, \"FS9Nw2tT3cJplojlH2zPZ8omCEQ=\");\n_c = SocketContext;\nexport { socketContext };\nvar _c;\n$RefreshReg$(_c, \"SocketContext\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","tokenContext","io","jsxDEV","_jsxDEV","socketContext","SocketContext","children","_s","socket","setSocket","onlineUsers","setOnlineUsers","token","ConnectSocket","query","authorization","console","log","on","users","close","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/context/SocketContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { tokenContext } from \"../context/TokenContext\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socketContext = createContext();\r\n\r\nexport default function SocketContext({ children }) {\r\n  const [socket, setSocket] = useState();\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const { token } = useContext(tokenContext);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const ConnectSocket = io(\"http://localhost:8000/\", {\r\n        query: {\r\n          authorization: token,\r\n        },\r\n      });\r\n\r\n      console.log(ConnectSocket);\r\n\r\n      setSocket(ConnectSocket);\r\n      // socket.on() is used to listen to the events. can be used both on client and server side\r\n      ConnectSocket.on(\"getOnlineUsers\", (users) => {\r\n        setOnlineUsers(users);\r\n      });\r\n\r\n      return () => ConnectSocket.close();\r\n    } else {\r\n      if (socket) {\r\n        socket?.close();\r\n        setSocket(\"\");\r\n      }\r\n    }\r\n\r\n    socket.on(\"message\", (message) => {\r\n      \r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <socketContext.Provider value={{ socket, onlineUsers }}>\r\n      {children}\r\n    </socketContext.Provider>\r\n  );\r\n}\r\n\r\nexport { socketContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,gBAAGR,aAAa,CAAC,CAAC;AAErC,eAAe,SAASS,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM;IAAEa;EAAM,CAAC,GAAGf,UAAU,CAACG,YAAY,CAAC;EAE1CF,SAAS,CAAC,MAAM;IACd,IAAIc,KAAK,EAAE;MACT,MAAMC,aAAa,GAAGZ,EAAE,CAAC,wBAAwB,EAAE;QACjDa,KAAK,EAAE;UACLC,aAAa,EAAEH;QACjB;MACF,CAAC,CAAC;MAEFI,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;MAE1BJ,SAAS,CAACI,aAAa,CAAC;MACxB;MACAA,aAAa,CAACK,EAAE,CAAC,gBAAgB,EAAGC,KAAK,IAAK;QAC5CR,cAAc,CAACQ,KAAK,CAAC;MACvB,CAAC,CAAC;MAEF,OAAO,MAAMN,aAAa,CAACO,KAAK,CAAC,CAAC;IACpC,CAAC,MAAM;MACL,IAAIZ,MAAM,EAAE;QACVA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEY,KAAK,CAAC,CAAC;QACfX,SAAS,CAAC,EAAE,CAAC;MACf;IACF;IAEAD,MAAM,CAACU,EAAE,CAAC,SAAS,EAAGG,OAAO,IAAK,CAElC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA,CAACC,aAAa,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,MAAM;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EACpDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;AAACpB,EAAA,CAvCuBF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAyCrC,SAASD,aAAa;AAAG,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\black\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\pdp_chat\\\\client\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport ChatNavbar from \"../components/chat/ChatNavbar\";\nimport ChatMessageInputs from \"../components/chat/ChatMessageInputs\";\nimport Message from \"../components/chat/Message\";\nimport { themeContext } from \"../context/ThemeContext\";\nimport { useParams } from \"react-router-dom\";\nimport Nomessages from \"../components/etc/Nomessages\";\nimport { getChatRoom } from \"../utils/ChatRoomApi\";\nimport { socketContext } from \"../context/SocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  onlineUsers,\n  checkOnline,\n  findSearch,\n  rol,\n  setRol\n}) {\n  _s();\n  const {\n    mode\n  } = useContext(themeContext);\n  const [load, setLoad] = useState(false);\n  const {\n    socket\n  } = useContext(socketContext);\n  const [chatRoom, setChatRoom] = useState();\n  const receiver = useParams();\n  const lastMessageRef = useRef(null);\n  const ChatRoom = async () => {\n    const chatData = await getChatRoom(receiver.id);\n    if (chatData) {\n      setChatRoom(chatData);\n    } else {\n      setChatRoom({\n        members: find\n      });\n    }\n  };\n  const updateChatRoom = async msg => {\n    setChatRoom(prevState => {\n      return {\n        ...prevState,\n        messages: [...prevState.messages, msg]\n      };\n    });\n  };\n  useEffect(() => {\n    ChatRoom();\n  }, [receiver]);\n  useEffect(() => {\n    setTimeout(() => {\n      if (lastMessageRef.current) {\n        var _lastMessageRef$curre;\n        (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    }, 100);\n  }, [chatRoom]);\n  useEffect(() => {\n    if (socket && chatRoom) {\n      socket.on(\"newMessage\", msg => {\n        const {\n          message,\n          chatId\n        } = msg;\n        const id = chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom._id;\n        console.log(chatId, id);\n        console.log(chatRoom);\n        if (chatId == id) {\n          setChatRoom(prevState => {\n            return {\n              ...prevState,\n              messages: [...prevState.messages, message]\n            };\n          });\n        }\n      });\n      return () => socket === null || socket === void 0 ? void 0 : socket.off(\"newMessage\");\n    } else setLoad(!load);\n  }, [load, chatRoom]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ChatNavbar, {\n      receiverData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id === receiver.id),\n      onlineUsers: onlineUsers,\n      checkOnline: checkOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: \"100vh\",\n        overflowX: \"hidden\",\n        overflowY: \"auto\",\n        \"&::-webkit-scrollbar\": {\n          height: 2,\n          width: 2,\n          WebkitAppearance: \"none\"\n        },\n        \"&::-webkit-scrollbar-thumb\": {\n          borderRadius: 0,\n          border: \"2px solid\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          height: \"auto\",\n          minHeight: \"100%\",\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end\",\n          backgroundColor: mode ? \"\" : \"rgba(24, 24, 24, 1)\"\n        },\n        children: (chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.messages.length) === 0 ? /*#__PURE__*/_jsxDEV(Nomessages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.messages.map((msg, idx) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            ref: lastMessageRef,\n            messages: msg,\n            receiver: receiver.id,\n            receiverData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id === receiver.id),\n            senderData: chatRoom === null || chatRoom === void 0 ? void 0 : chatRoom.members.find(member => member._id !== receiver.id)\n          }, msg._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatMessageInputs, {\n      path: receiver.id,\n      setChatRoom: updateChatRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"7xDVMNeh97TWKRRvZXFf2UtHR5M=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["Box","React","useContext","useEffect","useRef","useState","ChatNavbar","ChatMessageInputs","Message","themeContext","useParams","Nomessages","getChatRoom","socketContext","jsxDEV","_jsxDEV","Chat","onlineUsers","checkOnline","findSearch","rol","setRol","_s","mode","load","setLoad","socket","chatRoom","setChatRoom","receiver","lastMessageRef","ChatRoom","chatData","id","members","find","updateChatRoom","msg","prevState","messages","setTimeout","current","_lastMessageRef$curre","scrollIntoView","behavior","on","message","chatId","_id","console","log","off","sx","width","display","flexDirection","justifyContent","children","receiverData","member","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowX","overflowY","WebkitAppearance","borderRadius","border","minHeight","flex","backgroundColor","length","map","idx","ref","senderData","path","_c","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Рабочий стол/pdp_chat/client/src/pages/Chat.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport ChatNavbar from \"../components/chat/ChatNavbar\";\r\nimport ChatMessageInputs from \"../components/chat/ChatMessageInputs\";\r\nimport Message from \"../components/chat/Message\";\r\nimport { themeContext } from \"../context/ThemeContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Nomessages from \"../components/etc/Nomessages\";\r\nimport { getChatRoom } from \"../utils/ChatRoomApi\";\r\nimport { socketContext } from \"../context/SocketContext\";\r\n\r\nexport default function Chat({ onlineUsers, checkOnline, findSearch, rol, setRol }) {\r\n  const { mode } = useContext(themeContext);\r\n  const [load, setLoad] = useState(false);\r\n  const { socket } = useContext(socketContext);\r\n  const [chatRoom, setChatRoom] = useState();\r\n  const receiver = useParams();\r\n  const lastMessageRef = useRef(null);\r\n\r\n  const ChatRoom = async () => {\r\n    const chatData = await getChatRoom(receiver.id);\r\n    \r\n    if (chatData) {\r\n      setChatRoom(chatData);\r\n    }else {\r\n      setChatRoom({members: find});\r\n    }\r\n  };\r\n\r\n  const updateChatRoom = async (msg) => {\r\n    setChatRoom((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        messages: [...prevState.messages, msg],\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    ChatRoom();\r\n  }, [receiver]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (lastMessageRef.current) {\r\n        lastMessageRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    }, 100);\r\n  }, [chatRoom]);\r\n\r\n  useEffect(() => {\r\n    if (socket && chatRoom) {\r\n      socket.on(\"newMessage\", (msg) => {\r\n        const {message, chatId} = msg;\r\n        const id = chatRoom?._id;\r\n        console.log(chatId, id);\r\n        console.log(chatRoom);\r\n        if (chatId == id) {\r\n          setChatRoom((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              messages: [...prevState.messages, message],\r\n            };\r\n          });\r\n        }\r\n      });\r\n      return () => socket?.off(\"newMessage\");\r\n    } else setLoad(!load);\r\n  }, [load, chatRoom]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <ChatNavbar\r\n        receiverData={chatRoom?.members.find(\r\n          (member) => member._id === receiver.id\r\n        )}\r\n        onlineUsers={onlineUsers}\r\n        checkOnline={checkOnline}\r\n      />\r\n\r\n      <Box\r\n        sx={{\r\n          height: \"100vh\",\r\n          overflowX: \"hidden\",\r\n          overflowY: \"auto\",\r\n          \"&::-webkit-scrollbar\": {\r\n            height: 2,\r\n            width: 2,\r\n            WebkitAppearance: \"none\",\r\n          },\r\n          \"&::-webkit-scrollbar-thumb\": {\r\n            borderRadius: 0,\r\n            border: \"2px solid\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            minHeight: \"100%\",\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-end\",\r\n            backgroundColor: mode ? \"\" : \"rgba(24, 24, 24, 1)\",\r\n          }}\r\n        >\r\n          {chatRoom?.messages.length === 0 ? (\r\n            <Nomessages />\r\n          ) : (\r\n            chatRoom?.messages.map((msg, idx) => {\r\n              return (\r\n                <Message\r\n                  ref={lastMessageRef}\r\n                  key={msg._id}\r\n                  messages={msg}\r\n                  receiver={receiver.id}\r\n                  receiverData={chatRoom?.members.find(\r\n                    (member) => member._id === receiver.id\r\n                  )}\r\n                  senderData={chatRoom?.members.find(\r\n                    (member) => member._id !== receiver.id\r\n                  )}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <ChatMessageInputs path={receiver.id} setChatRoom={updateChatRoom} />\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}